public class LinkedList{

    public Node head;
    public Node tail;
    public Integer size;

    public LinkedList(){
         head = null;
         tail = null;
         size = 0;
    }

    public void addToFront(Integer value){
        Node newNode = new Node();
        newNode.data = value;
        newNode.next = null;

        if(head == null) {
            head = newNode;
            tail = newNode;
        } else {
           newNode.next = head;
           head = newNode;
        }
        size++;
    }

    public Integer removeFromFront(){
        if(head == null){return null; }
        Node nodeToRemove = head;

        head = head.next;
        size--;

        return nodeToRemove.data;
    }
    public void addToTail(Integer value){
        Node newNode = new Node();
        newNode.data = value;
        newNode.next = null;

        if(tail == null) {
            head = newNode;
            tail = newNode;
        } else {
           tail.next = newNode;
           tail = newNode;
        }
        size++;
    }
    public Integer removeFromTail(){
        if(head == null){return null; }
        if(size == 1) {
           Node currentNode = tail; 
           head = null;
           tail = null;
           size--;
           return currentNode.data; 
        }
        Node preceedingNode = null;
        Node currentNode = head;
        for(Integer i = 0;i < size - 1 ; i++){
            preceedingNode = currentNode;
            currentNode = currentNode.next;
        }
        preceedingNode.next = null;
        tail = preceedingNode;
        size-- ;
        
        return currentNode.data;

    }
    public Integer size(){
        return size;
    }    
}

public class Node{
    Integer data;
    Node next;
}