public List<Account> getAccounts(List<Account> accounts) {
    // code here
    accounts.sort(new AccountComparator());
    return accounts;
}
// write extra class here 
public class AccountComparator implements Comparator<Account> {
    public Integer compare(Account acc1, Account acc2) {
        // The return value of 0 indicates that both elements are equal.
        Integer returnValue = 0;
        
        if(acc1 == null && acc2 == null) {
            returnValue = 0;
        } else if(acc1 == null) {
            // nulls-first implementation
            returnValue = -1; 
        } else if(acc2== null) {
            // nulls-first implementation
            returnValue = 1;
        } else if ((acc1.AnnualRevenue == null) && (acc2.AnnualRevenue == null)) {
            // both have null AnnualRevenue
            returnValue = 0;
        } else if (acc1.AnnualRevenue == null){
            // nulls-first implementation
            returnValue = -1;
        } else if (acc2.AnnualRevenue == null){
            // nulls-first implementation
            returnValue = 1;
        } else if (acc1.AnnualRevenue < acc2.AnnualRevenue) {
            // Set return value to a negative value.
            returnValue = -1;
        } else if (acc1.AnnualRevenue > acc2.AnnualRevenue) {
            // Set return value to a positive value.
            returnValue = 1;
        }
        return returnValue;
    }
}